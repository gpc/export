buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
		classpath 'org.ajoberstar:gradle-git:1.4.2'
        classpath "io.spring.gradle:dependency-management-plugin:0.6.1.RELEASE"
    }
}

version project.projectVersion
group "org.grails.plugins"

apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.springframework.boot"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"
apply plugin: "org.grails.internal.grails-plugin-publish"
apply plugin: "io.spring.dependency-management"
apply plugin: 'java-library'
apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"

    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-dependencies"

    api 'net.sf.opencsv:opencsv:2.3'

    api 'com.lowagie:itext:2.1.7'
    api "com.lowagie:itext-rtf:2.1.7"
    runtimeOnly 'xerces:xercesImpl:2.9.0'

    api 'org.odftoolkit:simple-odf:0.6.6'
    api 'net.sourceforge.jexcelapi:jxl:2.6.12'
    api 'commons-beanutils:commons-beanutils:1.8.3'
    api 'commons-codec:commons-codec:1.17.0'

    testCompileOnly "org.grails:grails-plugin-testing"
}

java {
    withSourcesJar()
    withJavadocJar()
}

jar {
    exclude 'gsp**'

    List excludes = ['UrlMappings', 'TestController']
    excludes.each {
        exclude "**/${it}*.class"
    }
    eachFile { copyDetails ->
        if (copyDetails.path.contains('grails-plugin.xml')) {
            filter { line -> excludes.find{line.contains(it)}? null : line}
        }
    }
    archiveClassifier=''
}

grailsPublish {
    license {
        name = 'Apache-2.0'
    }

    title = "Grails Export Plugin"
    desc = "This plugin offers export functionality supporting different formats e.g. CSV, Excel, Open Document Spreadsheet, PDF and XML and can be extended to add additional formats."

    developers = [  graemerocher: 'Graeme Rocher',
                    puneetbehl: 'Puneet Behl',
                    nwwells: 'Nathan Wells',
                    tulu: 'Ruben',
                    arturoojeda: 'Arturo Ojeda López',
                    fabiooshiro: 'Fabio Issamu Oshiro',
                    ddelponte: 'Dean Del Ponte',
                    cristallo: 'Cristiano Limiti',
                    mirweb: 'Mirko Weber',
                    joasgarcia: 'Joás Garcia',
                    frangarcia: 'Fran García',
                    dustindclark: 'Dustin Clark' ]
}
